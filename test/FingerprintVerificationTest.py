import unittest
import sys
sys.path.insert(0, 'main')

from Group import *
from Fingerprint import *

#This class tests the verification stage of fingerprint
class FingerprintVerificationTest(unittest.TestCase):
  
  def test_same_fingerprint(self):
    aliceDevice = Group(groupName="g1",groupSize=0,users=[],usersFingerprints=[],groupFingerprint=None)
    bobDevice = Group(groupName="g1",groupSize=0,users=[],usersFingerprints=[],groupFingerprint=None)

    alice = User(id= [1, 0, 2, 6, 6, 2, 1, 7, 9, 5],
                  identifier= b'\x98\xf2\x1e\x9c\x9fEE~\x84\x87\x16\x81\x82\x16\n|\x8a\x10\xd9PP\x0cr\x10\x9a\xf5\x04Db\xa4\x7f\x92', 
                  identityKey= b'p\xa7\xc4\xaff(\xd3\xf5\xf7\x90\xd0\xe26\xc1\xe5go{If\x062\x84\x97\x1b\xde&\xd3\x8d\x87\n\xcc',
                  fingerprint= b'\xf0t\xd9\xf5\xc7\x8fA\x9f^7a\x816\xfc\x85\xb6\xc0;\xc4\xb6\xb9O\xeaB\xb0\xcb\n\x86\x13\xaf0\x02\xe4\xa5p\xfc\xe70\x08\x8f\xa6\xbf\xbc8hV\x8c\xf7\x9f\x1e~i\x14\xed\xff+?\x0b\xb8\x8b\xf1\xad\n\xe7')
    bob = User(id= [1, 4, 7, 7, 2, 6, 0, 0, 2, 1],
                identifier=  b'$\x1dgW\xd4K\xca\x06\xd4\xad\xd0\x1dH\x83\xf6\xffk\xd3\x11\x89\xea\x8a9\x92\x1fE\xae_s\xe8\x05\xe3',
                identityKey= b'$\xbd\xb2+g\xe6\xf6\xe3B\xfc>,\xee\xdd\xce\x00b\x8b\xabA\xce\xaf\xf8\xa0\xd0\xf7\xbdTx#\x8f/',
                fingerprint=  b'\x16\x96\xf7*\xeb\xfax\xb0f\xec\x80\xdc@<\xf0\xbc\xf2\xc4\xe1rNA\xaa\xf0\xcdDz(\x81\xa1{\xd6\xba-\x01lt1\xef9}A\xc6\xb4\x0cD^\xcd$\x0b\x08\xdf#gb\xa5\x8d\x8d\xce;\xcbrE\xb8')
    charlie = User(id= [8, 6, 2, 7, 2, 5, 3, 7, 0, 1],
                  identifier= b'\xc3\xc6\xf9\xd3\x92t\xa1[\xe7O\x90U~\xe0MW\xc2\x11-\xf0\xee #z9\x93\xbb\xecD\x87\xd2\x7f',
                  identityKey= b'\xafZ\xb9\xac\xdd\x10\xb6z\x14\x05\x8fT\xac\x9a\x92\xcd\x12\x97E\xf3h\xd3\x8aj\x13\xd2K\xd8\x8f\xdc?\xa2'
                  ,fingerprint= b'i\r@<\xd6\x8b\x1e\xf7\x9c:u\x9c\x93\x92\x1es\x13U\xfc\x0c\xf83\xccg\xf2\x1c1\x0b,\x07\x10\x10&\xaf\xf8(\x04B\x825l\xcf\xea\x80\xd5\xa4\xda\x9b\xc8\x1e\n\x8f\xc6\xa2\n\xbb\x05GE\xa0\xc3#\xb4\x8a')
    dave = User(id= [2, 4, 3, 8, 1, 6, 0, 4, 5, 1],
                  identifier= b'\xe5x#\xd7;\xc2\x03\xe9\xb6HM\xd7\xd6\x1e\x01\xf1\x05\x92<\x15\xd3\x17\x14.\xf3\xcfe\x17X\xfa\x8b\x9a',
                  identityKey= b"\xa1]S\x04\x96)b\x016\xcb\xe5\xccy<\x0e\x10\xac\xa5\x9c:J\x99\x19l'b\xd8\xc6 \xf8\xb5\x1f",
                  fingerprint= b'\xcax\xbc\xaa\x99`\x04\xaa\xa1z}\xa7C\x05\xc3\x99:\x02F\x8f\xde7\x9bS\rq0)\x19\xcd\xc8\x9a"\xa76\xaf\x08a\x04r\xe2\xc7d\'\xad\xd5\x89\xe6\x92y\xb3\xfe\xf8&\x163(\xddc\x82\x180\xd1\x8f')
    aliceDevice.add_users([alice,bob,charlie,dave])
    bobDevice.add_users([alice,bob,charlie,dave])
    aliceDevice.generate_group_fingerprint()
    bobDevice.generate_group_fingerprint()
    status = FingerprintUtil.compare_group_fingerprint(aliceDevice.groupFingerprint, bobDevice.groupFingerprint)
    self.assertEqual(status, True)

  def test_not_equal_fingerprint(self):
    aliceDevice = Group(groupName="g1",groupSize=0,users=[],usersFingerprints=[],groupFingerprint=None)
    bobDevice = Group(groupName="g1",groupSize=0,users=[],usersFingerprints=[],groupFingerprint=None)

    alice = User(id= [1, 0, 2, 6, 6, 2, 1, 7, 9, 5],
                  identifier= b'\x98\xf2\x1e\x9c\x9fEE~\x84\x87\x16\x81\x82\x16\n|\x8a\x10\xd9PP\x0cr\x10\x9a\xf5\x04Db\xa4\x7f\x92', 
                  identityKey= b'p\xa7\xc4\xaff(\xd3\xf5\xf7\x90\xd0\xe26\xc1\xe5go{If\x062\x84\x97\x1b\xde&\xd3\x8d\x87\n\xcc',
                  fingerprint= b'\xf0t\xd9\xf5\xc7\x8fA\x9f^7a\x816\xfc\x85\xb6\xc0;\xc4\xb6\xb9O\xeaB\xb0\xcb\n\x86\x13\xaf0\x02\xe4\xa5p\xfc\xe70\x08\x8f\xa6\xbf\xbc8hV\x8c\xf7\x9f\x1e~i\x14\xed\xff+?\x0b\xb8\x8b\xf1\xad\n\xe7')
    bob = User(id= [1, 4, 7, 7, 2, 6, 0, 0, 2, 1],
                identifier=  b'$\x1dgW\xd4K\xca\x06\xd4\xad\xd0\x1dH\x83\xf6\xffk\xd3\x11\x89\xea\x8a9\x92\x1fE\xae_s\xe8\x05\xe3',
                identityKey= b'$\xbd\xb2+g\xe6\xf6\xe3B\xfc>,\xee\xdd\xce\x00b\x8b\xabA\xce\xaf\xf8\xa0\xd0\xf7\xbdTx#\x8f/',
                fingerprint=  b'\x16\x96\xf7*\xeb\xfax\xb0f\xec\x80\xdc@<\xf0\xbc\xf2\xc4\xe1rNA\xaa\xf0\xcdDz(\x81\xa1{\xd6\xba-\x01lt1\xef9}A\xc6\xb4\x0cD^\xcd$\x0b\x08\xdf#gb\xa5\x8d\x8d\xce;\xcbrE\xb8')
    charlie = User(id= [8, 6, 2, 7, 2, 5, 3, 7, 0, 1],
                  identifier= b'\xc3\xc6\xf9\xd3\x92t\xa1[\xe7O\x90U~\xe0MW\xc2\x11-\xf0\xee #z9\x93\xbb\xecD\x87\xd2\x7f',
                  identityKey= b'\xafZ\xb9\xac\xdd\x10\xb6z\x14\x05\x8fT\xac\x9a\x92\xcd\x12\x97E\xf3h\xd3\x8aj\x13\xd2K\xd8\x8f\xdc?\xa2'
                  ,fingerprint= b'i\r@<\xd6\x8b\x1e\xf7\x9c:u\x9c\x93\x92\x1es\x13U\xfc\x0c\xf83\xccg\xf2\x1c1\x0b,\x07\x10\x10&\xaf\xf8(\x04B\x825l\xcf\xea\x80\xd5\xa4\xda\x9b\xc8\x1e\n\x8f\xc6\xa2\n\xbb\x05GE\xa0\xc3#\xb4\x8a')
    dave = User(id= [2, 4, 3, 8, 1, 6, 0, 4, 5, 1],
                  identifier= b'\xe5x#\xd7;\xc2\x03\xe9\xb6HM\xd7\xd6\x1e\x01\xf1\x05\x92<\x15\xd3\x17\x14.\xf3\xcfe\x17X\xfa\x8b\x9a',
                  identityKey= b"\xa1]S\x04\x96)b\x016\xcb\xe5\xccy<\x0e\x10\xac\xa5\x9c:J\x99\x19l'b\xd8\xc6 \xf8\xb5\x1f",
                  fingerprint= b'\xcax\xbc\xaa\x99`\x04\xaa\xa1z}\xa7C\x05\xc3\x99:\x02F\x8f\xde7\x9bS\rq0)\x19\xcd\xc8\x9a"\xa76\xaf\x08a\x04r\xe2\xc7d\'\xad\xd5\x89\xe6\x92y\xb3\xfe\xf8&\x163(\xddc\x82\x180\xd1\x8f')
    eve = User([],None,None,None)
    eve.user_init()
    aliceDevice.add_users([alice,bob,charlie,dave])
    bobDevice.add_users([alice,bob,charlie,eve])
    aliceDevice.generate_group_fingerprint()
    bobDevice.generate_group_fingerprint()
    status = FingerprintUtil.compare_group_fingerprint(aliceDevice.groupFingerprint, bobDevice.groupFingerprint)
    self.assertEqual(status, False)
    
  def test_asynchronous_fingerprint(self):
    aliceDevice = Group(groupName="g1",groupSize=0,users=[],usersFingerprints=[],groupFingerprint=None)
    bobDevice = Group(groupName="g1",groupSize=0,users=[],usersFingerprints=[],groupFingerprint=None)

    alice = User(id= [1, 0, 2, 6, 6, 2, 1, 7, 9, 5],
                  identifier= b'\x98\xf2\x1e\x9c\x9fEE~\x84\x87\x16\x81\x82\x16\n|\x8a\x10\xd9PP\x0cr\x10\x9a\xf5\x04Db\xa4\x7f\x92', 
                  identityKey= b'p\xa7\xc4\xaff(\xd3\xf5\xf7\x90\xd0\xe26\xc1\xe5go{If\x062\x84\x97\x1b\xde&\xd3\x8d\x87\n\xcc',
                  fingerprint= b'\xf0t\xd9\xf5\xc7\x8fA\x9f^7a\x816\xfc\x85\xb6\xc0;\xc4\xb6\xb9O\xeaB\xb0\xcb\n\x86\x13\xaf0\x02\xe4\xa5p\xfc\xe70\x08\x8f\xa6\xbf\xbc8hV\x8c\xf7\x9f\x1e~i\x14\xed\xff+?\x0b\xb8\x8b\xf1\xad\n\xe7')
    bob = User(id= [1, 4, 7, 7, 2, 6, 0, 0, 2, 1],
                identifier=  b'$\x1dgW\xd4K\xca\x06\xd4\xad\xd0\x1dH\x83\xf6\xffk\xd3\x11\x89\xea\x8a9\x92\x1fE\xae_s\xe8\x05\xe3',
                identityKey= b'$\xbd\xb2+g\xe6\xf6\xe3B\xfc>,\xee\xdd\xce\x00b\x8b\xabA\xce\xaf\xf8\xa0\xd0\xf7\xbdTx#\x8f/',
                fingerprint=  b'\x16\x96\xf7*\xeb\xfax\xb0f\xec\x80\xdc@<\xf0\xbc\xf2\xc4\xe1rNA\xaa\xf0\xcdDz(\x81\xa1{\xd6\xba-\x01lt1\xef9}A\xc6\xb4\x0cD^\xcd$\x0b\x08\xdf#gb\xa5\x8d\x8d\xce;\xcbrE\xb8')
    charlie = User(id= [8, 6, 2, 7, 2, 5, 3, 7, 0, 1],
                  identifier= b'\xc3\xc6\xf9\xd3\x92t\xa1[\xe7O\x90U~\xe0MW\xc2\x11-\xf0\xee #z9\x93\xbb\xecD\x87\xd2\x7f',
                  identityKey= b'\xafZ\xb9\xac\xdd\x10\xb6z\x14\x05\x8fT\xac\x9a\x92\xcd\x12\x97E\xf3h\xd3\x8aj\x13\xd2K\xd8\x8f\xdc?\xa2'
                  ,fingerprint= b'i\r@<\xd6\x8b\x1e\xf7\x9c:u\x9c\x93\x92\x1es\x13U\xfc\x0c\xf83\xccg\xf2\x1c1\x0b,\x07\x10\x10&\xaf\xf8(\x04B\x825l\xcf\xea\x80\xd5\xa4\xda\x9b\xc8\x1e\n\x8f\xc6\xa2\n\xbb\x05GE\xa0\xc3#\xb4\x8a')
    dave = User(id= [2, 4, 3, 8, 1, 6, 0, 4, 5, 1],
                  identifier= b'\xe5x#\xd7;\xc2\x03\xe9\xb6HM\xd7\xd6\x1e\x01\xf1\x05\x92<\x15\xd3\x17\x14.\xf3\xcfe\x17X\xfa\x8b\x9a',
                  identityKey= b"\xa1]S\x04\x96)b\x016\xcb\xe5\xccy<\x0e\x10\xac\xa5\x9c:J\x99\x19l'b\xd8\xc6 \xf8\xb5\x1f",
                  fingerprint= b'\xcax\xbc\xaa\x99`\x04\xaa\xa1z}\xa7C\x05\xc3\x99:\x02F\x8f\xde7\x9bS\rq0)\x19\xcd\xc8\x9a"\xa76\xaf\x08a\x04r\xe2\xc7d\'\xad\xd5\x89\xe6\x92y\xb3\xfe\xf8&\x163(\xddc\x82\x180\xd1\x8f')
    eve = User([],None,None,None)
    eve.user_init()
    aliceDevice.add_users([alice,bob,charlie,dave])
    bobDevice.add_users([alice,bob,charlie])
    aliceDevice.generate_group_fingerprint()
    bobDevice.generate_group_fingerprint()
    status = FingerprintUtil.compare_group_fingerprint(aliceDevice.groupFingerprint, bobDevice.groupFingerprint)
    self.assertEqual(status, True)   
    
if __name__ == '__main__':
  unittest.main()